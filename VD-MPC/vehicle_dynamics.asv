%Author: Swati V. Shirke
%This code is for state space of vehicle dynamics
% states: Vx, Vy, r

function dz = vehicle_dynamics(z, accel, deccel, yaw)
    params = system_parameters();

    Vx = z(1);
    Vy = z(2);
    r  = z(3);
    x  = z(4);
    y  = z(5);
    psi= z(6);

    %% calculate forces
    t_forces = tire_forces(params, z); %8 * 1 vector
    [Fx_sum, Fy_f, Fy_r] = vehicle_forces(params, z, t_forces);
    Fy_sum = Fy_f + Fy_r;   
    
    Vx_dt = Vy * r + (Fx_sum / params.m);
    Vy_dt = Vx * r + (Fy_sum / params.m);
    r_dt =  (Fy_f * params.a - Fy_r * params.b ) / params.Izz_v;

    x_dt = Vx * cos(psi) - Vy * sin(psi);
    y_dt = Vx * sin(psi) + Vy * cos(psi);
    psi_dt  = r; 
    
    %%input torue to each wheel 
    tau_in = cal_wheel_torque_in(params, z, accel, deccel, yaw);
    tau_in_fl = tau_in(1);
    tau_in_fr = tau_in(2);
    tau_in_rl = tau_in(3);
    tau_in_rr = tau_in(4);

    %%set tire forces 
    Fx_fl = t_forces(1);
    Fx_fr = t_forces(2);
    Fx_rl = t_forces(3);
    Fx_rr = t_forces(4); 

    %%calculate angular wheel velocities 
    w_fl_dt = (tau_in_fl - Fx_fl * params.R_f) / params.Iyy_w_f;
    w_fr_dt = (tau_in_fr - Fx_fr * params.R_f) / params.Iyy_w_f;
    w_rl_dt = (tau_in_rl - Fx_rl * params.R_r) / params.Iyy_w_r;
    w_rr_dt = (tau_in_rr - Fx_rr * params.R_r) / params.Iyy_w_r;

    omega_fl_dt = w_fl_dt;
    omega_fr_dt = w_fr_dt;
    omega_rl_dt = w_rl_dt;
    omega_rr_dt = w_rr_dt;

    dz = [Vx_dt; Vy_dt; r_dt; x_dt; y_dt; psi_dt, omega_fl_dt, omega_fr_dt, omega_rl_dt, omega_rr_dt];


end 


